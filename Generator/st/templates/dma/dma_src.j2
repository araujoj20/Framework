#include "dma.h"

/* DMA handles*/
{%- for dma in dma_list %}
{%- if dma.direction == "MEMORY_TO_MEMORY" %}
DMA_HandleTypeDef hdma_memtomem_{{ dma.name.lower() }}_{{ dma.stream | replace("Channel", "channel") }};
{%- endif %}
{%- endfor %}

void MX_DMA_Init(void)
{   
    /* DMA controller clock enable */
    __HAL_RCC_DMAMUX1_CLK_ENABLE();
    __HAL_RCC_{{ dma_list[0].name }}_CLK_ENABLE();

    {%- for dma in dma_list %}
    {%- if dma.direction == "MEMORY_TO_MEMORY" %}

    /* Configure DMA request on {{ dma.name }}_{{ dma.stream }} */
    hdma_memtomem_{{ dma.name.lower() }}_{{ dma.stream | replace("Channel", "channel") }}.Instance = {{ dma.name }}_{{ dma.stream }};
    hdma_memtomem_{{ dma.name.lower() }}_{{ dma.stream | replace("Channel", "channel") }}.Init.Request = DMA_REQUEST_MEM2MEM;
    hdma_memtomem_{{ dma.name.lower() }}_{{ dma.stream | replace("Channel", "channel") }}.Init.Direction = DMA_MEMORY_TO_MEMORY;
    hdma_memtomem_{{ dma.name.lower() }}_{{ dma.stream | replace("Channel", "channel") }}.Init.PeriphInc = DMA_PINC_DISABLE;
    hdma_memtomem_{{ dma.name.lower() }}_{{ dma.stream | replace("Channel", "channel") }}.Init.MemInc = DMA_MINC_ENABLE;
    hdma_memtomem_{{ dma.name.lower() }}_{{ dma.stream | replace("Channel", "channel") }}.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
    hdma_memtomem_{{ dma.name.lower() }}_{{ dma.stream | replace("Channel", "channel") }}.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
    hdma_memtomem_{{ dma.name.lower() }}_{{ dma.stream | replace("Channel", "channel") }}.Init.Mode = DMA_NORMAL;
    hdma_memtomem_{{ dma.name.lower() }}_{{ dma.stream | replace("Channel", "channel") }}.Init.Priority = DMA_PRIORITY_LOW;

    if (HAL_DMA_Init(&hdma_memtomem_{{ dma.name.lower() }}_{{ dma.stream | replace("Channel", "channel") }}) != HAL_OK)
    {
        Error_Handler();
    }

    if (HAL_DMA_ConfigChannelAttributes(&hdma_memtomem_{{ dma.name.lower() }}_{{ dma.stream | replace("Channel", "channel") }}, DMA_CHANNEL_NPRIV) != HAL_OK)
    {
        Error_Handler();
    }
    {%- endif %}
    {%- endfor %}

    /* DMA interrupt init */
    {%- for dma in dma_list %}
    HAL_NVIC_SetPriority({{ dma.name }}_{{ dma.stream }}_IRQn, 0, 0);
    HAL_NVIC_EnableIRQ({{ dma.name }}_{{ dma.stream }}_IRQn);
    {%- endfor %}
}
